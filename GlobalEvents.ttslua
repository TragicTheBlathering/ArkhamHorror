local tool = {}
      tool.waitForLastDropIntoBox=require("/_libs/WaitUtils/waitUtils").dropIntoBox
      tool.runAfterSmoothMove=require("/_libs/WaitUtils/waitUtils").runAfterSmoothMove
      tool.shuffleBag=require("/_libs/shuffleUtils/shuffleContainer").container
      tool.scaleBag=require("/_libs/scaleBags/scaleBags").fromContents
      tool.processTrash=require("/_libs/trashCan/trashCan").process

local dropTimer = 0.8

local GlobalEvents = {}
--------------------------------------------------------------------------------
--- onObjectEnter : CONTAINER --------------------------------------------------
function onObjectEnterContainer(bag, obj)
    -- Run Trash code, skip everythign else.
    if bag.hasTag('TrashCan') then
        tool.waitForLastDropIntoBox(bag, obj, tool.processTrash, dropTimer)
    else -- Run onObjectEnterExitContainer_Stack()... every Enter Event in this will be test for and run
        tool.waitForLastDropIntoBox(bag, obj, onObjectEnterExitContainer_Stack, dropTimer)
    end
end
--------------------------------------------------------------------------------
--- onObjectLeave : CONTAINER --------------------------------------------------
function onObjectLeaveContainer(bag, obj)
    tool.waitForLastDropIntoBox(bag, obj, onObjectEnterExitContainer_Stack, dropTimer)
end
--------------------------------------------------------------------------------
--- ???
function onPlayerAction(player, action, targets)
    if action == Player.Action.FlipOver
        or action == Player.Action.FlipIncrementalLeft
        or action == Player.Action.FlipIncrementalRight
    then
        for k,obj in pairs(targets) do
            if obj.hasTag('ID_Gator') then
                rot = obj.getRotation()
                pos = obj.getPosition()
                if math.abs( rot.z - 180) <= 0.5 then
                    print('READY')
                    obj.setPositionSmooth(pos+Vector(0,0.6,0))
                    obj.setRotationSmooth(Vector(0,180,0))
                    return false
                elseif math.abs( rot.z - 0) <= 0.5 then
                    print('DELAY')
                    obj.setPositionSmooth(pos+Vector(0,1.4,0))
                    obj.setRotationSmooth(Vector(0,0,180))
                    return false
                end
            end
        end
    end
    return true
end
--*****************************************************************************************************
--- onObjectEnterExitContainer_Stack : CONTAINER -------------------------------
-- This will run a bunch of event tests after a SINLGE Droptest.
function onObjectEnterExitContainer_Stack(bag, obj)
    if bag.hasTag('ScaleBag') then
        tool.scaleBag(bag)
    end

    if bag.hasTag('ShuffleBag') or bag.hasTag('ShuffleBagRestricted') then
        tool.shuffleBag(bag)
    end
end
--******************************************************************************
return GlobalEvents
