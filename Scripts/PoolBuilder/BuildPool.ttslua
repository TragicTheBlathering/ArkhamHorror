local debug = require("/_libs/debug")
local zprint = debug.zprint
local tool = {}
    tool.castBox = require("/_libs/CastToFindObjects").CastBox
    tool.findInSceneByTag = require("/_libs/CastToFindObjects").findInSceneByTag

function onload()
    makeButtons()
end

--------------------------------------------------------------------------------
--- Button Function ------------------------------------------------------------
function B_ProcessPool(TrashBag)
    _G["myCoroutine"] = function()
        local waitCount = 4
        local FoundByCast = tool.castBox('Pool_Board', Vector(29,10,43.6), Vector(0,5.05,0)) -- true means include source object by tag 'PoolBoard'
        local PoolTrash = tool.findInSceneByTag('Pool_Trash')
        --Process bags first
        for count, obj in ipairs(FoundByCast) do
            if obj.type == "Bag" then
                for i = 1, obj.getQuantity(), 1 do
                    local pulledFromBag = obj.takeObject({})
                    PoolTrash.putObject(pulledFromBag)
                    for _=1,waitCount do coroutine.yield(0) end
                end
            end
        end
        --Process the rest AFTER bags
        for count, obj in ipairs(FoundByCast) do
            if obj.type ~= "Bag" then
                PoolTrash.putObject(obj)
                for _=1,waitCount do coroutine.yield(0) end
            end
        end
        return 1
    end
    startLuaCoroutine(self, "myCoroutine")
end
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
function makeButtons(set)
    local text = 'Place Optional Component Bags Here\nBuild Pool Before Clicking Setup'
    local text2 = 'See NoteBook for details\nNoteBook Button is on the Toolbar at the top of the screen'
    local text3 = 'Place\nComponants'
    function B_Nothing()end

    local buttons = {}
    if set == nil then
        local button = {
            click_function = 'B_Nothing',
            function_owner = self,
            label = text,
            position = {0,2,1},
            rotation = {0, 180, 0},
            width = 0,
            height = 0,
            font_size = 400,
            font_color = 'White',
            scale = {1,1,1}}
        table.insert(buttons, button)
        button = {
            click_function = 'B_Nothing',
            function_owner = self,
            label = text2,
            position = {0,2,-0.4},
            rotation = {0, 180, 0},
            width = 0,
            height = 0,
            font_size = 400,
            font_color = 'White',
            scale = {0.5,0.5,0.5}}
        table.insert(buttons, button)
        button = {
            click_function = 'B_ProcessPool',
            function_owner = self,
            label = text3,
            position = {0,2,-3.5},
            rotation = {0, 180, 0},
            width = 2800,
            height = 1100,
            font_size = 400,
            --font_color = 'Black',
            scale = {2,2,2}}
        table.insert(buttons, button)
    end
 -- Create Buttons
    for _, button in ipairs(buttons) do
        self.createButton(button)
    end
end
